#+TITLE: PIP Instances
#+AUTHOR:    Gustavo Gutierrez
#+EMAIL:     gustavo.ggutierrez@gmail.com
#+DATE:      2011-10-29 Sat
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:4 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   skip:nil d:nil pri:nil tags:not-in-toc
#+OPTIONS:   TeX:t LaTeX:t toc:t todo:t
#+LaTeX_CLASS: report
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:

* Instance description
  |--------+----------+--------------+-----------+----------|
  | Name   | Packages | Dependencies | Conflicts | Provides |
  |--------+----------+--------------+-----------+----------|
  | kmines |    71342 |       404070 |     45915 |   116849 |
  |--------+----------+--------------+-----------+----------|
 
* Statistics
** Representation size
   The following data is measured by loading all the relevant
   information of the problem into /ground relations/.

   For these measurements we are using the default parameters to
   initialize CUDD.
   |--------+--------------+---------+-----+-----------+--------------|
   | Name   | Memmory (MB) | GC (s.) |  GC | BDD Nodes | Reading (s.) |
   |--------+--------------+---------+-----+-----------+--------------|
   | kmines |      64.2197 |   9.743 | 243 |   1035915 |      35.2547 |
   |--------+--------------+---------+-----+-----------+--------------|
  
* Solver

** Constraints and branchers
   Three main constraints act on the problem:
   - Dependencies :: : 
		     - Add packages:
		       - On installation inclusions. When a package
                         appears in the installation all its
                         dependencies must be fulfilled.  [[file:../solver/prop/dependencies.hh::75][Implementation]]
		     - Remove packages: A package cannot be installed
                       if at least one of its dependencies is not
                       installable.  [[file:../solver/prop/dependencies.hh::92][Implementation]]

		       
		     This propagator does not computes a /fixed
                     point/. Its own execution can lead to the
                     inclusion of more packages that can lead to more
                     prunning to be done.
		     
   - Provides :: :
		 - Add packages:
		   - When a provided tuple becomes *known*, both
                     packages the provider and the virtual must be
                     part of the installation.  [[file:../solver/prop/provides.hh::69][Implementation]]
		   - When a package is installed, all the packages it
                     provides become installed and known in the
                     provides relation.
		     
		     - This can be done in several ways. The first one
                       is by implementing it as part of the propagator
                       or by creating a /dependency/ between every
                       concrete package and the packages it
                       provides. This make sense since it is not
                       possible to have a package installed without
                       having the functionality it provides. This has
                       the advantage that no extra code is needed and
                       the /dependencies/ constraint will take care of
                       this part.

		     - As a concrete package provides itself, all the
                       concrete packages that are *known* are used to
                       update the provides relation to reflect this
                       fact. This will prevent concrete packages from
                       being selected by the brancher.  [[file:../solver/prop/provides.hh::77][Implementation]]
		   - When there is only one provider for a package
                     that is needed in the installation the provider
                     is installed. [[file:../solver/prop/provides.hh::88][Implementation]]
		 - Remove packages: This constraint neither removes
                   packages from the installation nor tuples from
                   other relations.
   - Conflicts :: :
		  - Add packages: This constraint *does not* add any
                    package from the installantion and does not add
                    any relation to other veriable.
		  - Remove packages: when a package is installed, all
                    the known conflicts of it must become
                    uninstallable. This removes the conflicting
                    packages from the installation.
 
		  This propagator computes a fix point. The reason is
                  that the conflict relation is symetric and not
                  transitive. Therefore, running the prunning algorith
                  will not add further information that will lead to a
                  re-execution of itself.

   - Brancher :: : There are several ways of branching this problem
		 - /Stable providers/. This brancher enforces that
                   /every/ package in the installation is provided by
                   a package in the same installation. For this, the
                   state of the brancher consists of the installation
                   and the provides variables.
		   - Brancher functionality:
		     - The brancher is /done/ when all the packages
		       *knwon* in the installation have at *least one*
		       provider.
		     - When the brancher is *not done*, a subrelation of
		       packages needing a provider is computed and one
		       of the tuples of this relation is taken as a
		       *choice*. This is represented by including it as
		       *known* in the provides relation.

		       This part of the brancher can be improved by an
		       heuristic that makes a *reasonable* choice that
		       could lead to a good solution.
		   - Important remarks: 
		     - The brancher should only select provides tuples
                       that involve virtual packages. It is a mistake
                       if the brancher chooses a provider for a
                       concrete package.
		     - While the brancher is computing whether it is
                       done or not it can store some information that
                       will be used during the /choice/ part. This
                       information is the subrelation of packages that
                       need to be provided and the ways for doing it.


